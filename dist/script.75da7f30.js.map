{"version":3,"sources":["node_modules/chessboardjs/www/js/chessboard.js","chess.js","script.js"],"names":["Chess","fen","BLACK","WHITE","EMPTY","PAWN","KNIGHT","BISHOP","ROOK","QUEEN","KING","SYMBOLS","DEFAULT_POSITION","POSSIBLE_RESULTS","PAWN_OFFSETS","b","w","PIECE_OFFSETS","n","r","q","k","ATTACKS","RAYS","SHIFTS","p","FLAGS","NORMAL","CAPTURE","BIG_PAWN","EP_CAPTURE","PROMOTION","KSIDE_CASTLE","QSIDE_CASTLE","BITS","RANK_1","RANK_2","RANK_3","RANK_4","RANK_5","RANK_6","RANK_7","RANK_8","SQUARES","a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1","ROOKS","square","flag","board","Array","kings","turn","castling","ep_square","half_moves","move_number","history","header","comments","load","clear","keep_headers","update_setup","generate_fen","prune_comments","reversed_history","current_comments","copy_comment","length","push","undo_move","make_move","pop","reset","tokens","split","position","validate_fen","valid","i","piece","charAt","is_digit","parseInt","color","put","type","toLowerCase","algebraic","indexOf","errors","error_number","error","isNaN","test","rows","sum_fields","previous_was_number","empty","toUpperCase","cflags","epflags","join","set_header","args","get","sq","remove","build_move","from","to","flags","promotion","move","captured","generate_moves","options","add_move","moves","rank","pieces","len","us","them","swap_color","second_rank","first_sq","last_sq","single_square","legal","j","offset","castling_from","castling_to","attacked","legal_moves","king_attacked","move_to_san","sloppy","output","disambiguator","get_disambiguator","in_check","in_checkmate","stripped_san","replace","difference","index","blocked","in_stalemate","insufficient_material","bishops","num_pieces","sq_color","sum","in_threefold_repetition","positions","repetition","slice","old","ambiguities","same_rank","same_file","ambig_from","ambig_to","ambig_piece","file","ascii","s","symbol","move_from_san","clean_move","matches","match","f","substring","c","make_pretty","ugly_move","clone","san","obj","dupe","property","_typeof","trim","str","perft","depth","nodes","child_nodes","keys","ugly_moves","verbose","in_draw","game_over","row","pgn","newline","newline_char","max_width","result","header_exists","append_comment","move_string","comment","delimiter","concat","Result","strip","wrap_comment","width","_iterator","_createForOfIteratorHelper","_step","done","token","value","err","e","current_width","includes","load_pgn","mask","has_keys","object","key","parse_pgn_header","header_obj","headers","RegExp","header_regex","header_string","exec","to_hex","string","map","charCodeAt","toString","encodeURIComponent","from_hex","decodeURIComponent","encode_comment","decode_comment","startsWith","endsWith","ms","bracket","semicolon","undefined","rav_regex","half_move","arguments","setTurn","t","move_obj","pretty_move","undo","square_color","sq_0x88","move_history","get_comment","set_comment","delete_comment","get_comments","Object","delete_comments","exports","define","_chessboardjs","_interopRequireDefault","require","_chess","__esModule","default","console","log","Chessboard","draggable","onDragStart","onDrop","onSnapEnd","pieceTheme","flip","start","game","worker","Worker","isWhite","thinking","document","querySelector","scorecard","statusDisplay","moveNumber","newdiv","createElement","id","append","moveString","getElementById","addEventListener","downloadPGN","element","setAttribute","Date","now","style","display","body","appendChild","click","removeChild","source","orientation","search","target","innerHTML","updateStatus","status","moveColor","postMessage","onmessage","nextMove","JSON","parse","data"],"mappings":"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CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjD,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAG,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EACjD,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,CAC/C;ADlBH,EEgBEL,UAAU,EAAE;AFfd,ECmBE,ACHAK,UAAU,GAAGL,UAAU,GAAG,IAAI;AFfhC,ECmBE,ACHAC,IDGI/U,ECHE,EDGE,CCHC0U,EDGE,CACR,EAAE,EAAG,CAAC,ACJQ,CAACM,CDIN,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,ACJG,CDIF,ACJG,EDID,EAAE,CCJI,CDID,ACJE,CDID,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAC5D,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,EAAE,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,CAAC,EAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAC,CAAC,EAAE,EAAG,CAAC,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C,ICcwCC,EAAE,EAAG,EAAE;ADb/C,ICaiDC,EAAE,EAAG,EAAE;ADZxD,ICY0DC,EAAE,EAAG,EAAE;ADXjE,ICWmEC,EAAE,EAAG,EAAE;ADV1E,ICWIC,EAAE,EAAG,EAAE;ADVX,ICUaC,EAAE,EAAG,EAAE;ADTpB,ICSsBC,EAAE,EAAG,EAAE;ADR7B,ICQ+BC,EAAE,EAAG,EAAE;ADPtC,ICOwCC,EAAE,EAAG,EAAE;ADN/C,ICMiDC,EAAE,EAAG,EAAE;ADLxD,ICK0DC,EAAE,EAAG,EAAE;ADJjE,ICImEC,EAAE,EAAG,EAAE;ADH1E,ICIIC,EAAE,EAAG,EAAE;ADHX,ICGaC,EAAE,EAAG,EAAE;ADFpB,ICEsBC,EAAE,EAAG,EAAE;ADD7B,ICC+BC,EAAE,EAAG,EAAE;ADAtC,ICAwCC,EAAE,EAAG,EAAE;ADC/C,ICDiDC,EAAE,EAAG,EAAE;ADExD,ICF0DC,EAAE,EAAG,EAAE;ADGjE,ICHmEC,EAAE,EAAG,EAAE;ADI1E,ICHIC,EAAE,EAAG,EAAE;ADIX,ICJaC,EAAE,EAAG,EAAE;ADKpB,ICLsBC,EAAE,EAAG,EAAE;ADM7B,ICN+BC,EAAE,EAAG,EAAE;ADOtC,ICPwCC,EAAE,EAAG,EAAE;ADQ/C,ICRiDC,EAAE,EAAG,EAAE;ADSxD,ICT0DC,EAAE,EAAG,EAAE;ADUjE,ICVmEC,EAAE,EAAG,EAAE;ADW1E,ICVIC,EAAE,EAAG,EAAE;ADWX,ICXaC,EAAE,EAAG,EAAE;ADYpB,ICZsBC,EAAE,EAAG,EAAE;ADa7B,ICb+BC,EAAE,EAAG,EAAE;ADctC,ICdwCC,EAAE,EAAE,GAAG;ADe/C,ICfiDC,EAAE,EAAE,GAAG;ADgBxD,IChB0DC,EAAE,EAAE,GAAG;ADiBjE,ICjBmEC,EAAE,EAAE,GAAG;ADkB1E,ICjBIC,EAAE,EAAE,GAAG;ADkBX,IClBaC,EAAE,EAAE,GAAG;ADmBpB,ICnBsBC,EAAE,EAAE,GAAG;ADoB7B,ICpB+BC,EAAE,EAAE,GAAG;ADqBtC,ICrBwCC,EAAE,EAAE,GAAG;ADsB/C,ICtBiDC,EAAE,EAAE,GAAG;ADuBxD,ICvB0DC,EAAE,EAAE,GA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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n","/*\n * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\nvar Chess = function(fen) {\n  var BLACK = 'b'\n  var WHITE = 'w'\n\n  var EMPTY = -1\n\n  var PAWN = 'p'\n  var KNIGHT = 'n'\n  var BISHOP = 'b'\n  var ROOK = 'r'\n  var QUEEN = 'q'\n  var KING = 'k'\n\n  var SYMBOLS = 'pnbrqkPNBRQK'\n\n  var DEFAULT_POSITION =\n    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*']\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  }\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n  }\n\n  // prettier-ignore\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  // prettier-ignore\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  }\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  }\n\n  var RANK_1 = 7\n  var RANK_2 = 6\n  var RANK_3 = 5\n  var RANK_4 = 4\n  var RANK_5 = 3\n  var RANK_6 = 2\n  var RANK_7 = 1\n  var RANK_8 = 0\n\n  // prettier-ignore\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [\n      { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\n      { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\n    ],\n    b: [\n      { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\n      { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\n    ]\n  }\n\n  var board = new Array(128)\n  var kings = { w: EMPTY, b: EMPTY }\n  var turn = WHITE\n  var castling = { w: 0, b: 0 }\n  var ep_square = EMPTY\n  var half_moves = 0\n  var move_number = 1\n  var history = []\n  var header = {}\n  var comments = {}\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION)\n  } else {\n    load(fen)\n  }\n\n  function clear(keep_headers) {\n    if (typeof keep_headers === 'undefined') {\n      keep_headers = false\n    }\n\n    board = new Array(128)\n    kings = { w: EMPTY, b: EMPTY }\n    turn = WHITE\n    castling = { w: 0, b: 0 }\n    ep_square = EMPTY\n    half_moves = 0\n    move_number = 1\n    history = []\n    if (!keep_headers) header = {}\n    comments = {}\n    update_setup(generate_fen())\n  }\n\n  function prune_comments() {\n    var reversed_history = [];\n    var current_comments = {};\n    var copy_comment = function(fen) {\n      if (fen in comments) {\n        current_comments[fen] = comments[fen];\n      }\n    };\n    while (history.length > 0) {\n      reversed_history.push(undo_move());\n    }\n    copy_comment(generate_fen());\n    while (reversed_history.length > 0) {\n      make_move(reversed_history.pop());\n      copy_comment(generate_fen());\n    }\n    comments = current_comments;\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION)\n  }\n\n  function load(fen, keep_headers) {\n    if (typeof keep_headers === 'undefined') {\n      keep_headers = false\n    }\n\n    var tokens = fen.split(/\\s+/)\n    var position = tokens[0]\n    var square = 0\n\n    if (!validate_fen(fen).valid) {\n      return false\n    }\n\n    clear(keep_headers)\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i)\n\n      if (piece === '/') {\n        square += 8\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10)\n      } else {\n        var color = piece < 'a' ? WHITE : BLACK\n        put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n        square++\n      }\n    }\n\n    turn = tokens[1]\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE\n    }\n\n    ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]]\n    half_moves = parseInt(tokens[4], 10)\n    move_number = parseInt(tokens[5], 10)\n\n    update_setup(generate_fen())\n\n    return true\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n      0: 'No errors.',\n      1: 'FEN string must contain six space-delimited fields.',\n      2: '6th field (move number) must be a positive integer.',\n      3: '5th field (half move counter) must be a non-negative integer.',\n      4: '4th field (en-passant square) is invalid.',\n      5: '3rd field (castling availability) is invalid.',\n      6: '2nd field (side to move) is invalid.',\n      7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n      8: '1st field (piece positions) is invalid [consecutive numbers].',\n      9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square'\n    }\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/)\n    if (tokens.length !== 6) {\n      return { valid: false, error_number: 1, error: errors[1] }\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\n      return { valid: false, error_number: 2, error: errors[2] }\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\n      return { valid: false, error_number: 3, error: errors[3] }\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return { valid: false, error_number: 4, error: errors[4] }\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return { valid: false, error_number: 5, error: errors[5] }\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return { valid: false, error_number: 6, error: errors[6] }\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/')\n    if (rows.length !== 8) {\n      return { valid: false, error_number: 7, error: errors[7] }\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0\n      var previous_was_number = false\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return { valid: false, error_number: 8, error: errors[8] }\n          }\n          sum_fields += parseInt(rows[i][k], 10)\n          previous_was_number = true\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return { valid: false, error_number: 9, error: errors[9] }\n          }\n          sum_fields += 1\n          previous_was_number = false\n        }\n      }\n      if (sum_fields !== 8) {\n        return { valid: false, error_number: 10, error: errors[10] }\n      }\n    }\n\n    if (\n      (tokens[3][1] == '3' && tokens[1] == 'w') ||\n      (tokens[3][1] == '6' && tokens[1] == 'b')\n    ) {\n      return { valid: false, error_number: 11, error: errors[11] }\n    }\n\n    /* everything's okay! */\n    return { valid: true, error_number: 0, error: errors[0] }\n  }\n\n  function generate_fen() {\n    var empty = 0\n    var fen = ''\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++\n      } else {\n        if (empty > 0) {\n          fen += empty\n          empty = 0\n        }\n        var color = board[i].color\n        var piece = board[i].type\n\n        fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/'\n        }\n\n        empty = 0\n        i += 8\n      }\n    }\n\n    var cflags = ''\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n      cflags += 'K'\n    }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n      cflags += 'Q'\n    }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n      cflags += 'k'\n    }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n      cflags += 'q'\n    }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-'\n    var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1]\n      }\n    }\n    return header\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1'\n      header['FEN'] = fen\n    } else {\n      delete header['SetUp']\n      delete header['FEN']\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]]\n    return piece ? { type: piece.type, color: piece.color } : null\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false\n    }\n\n    var sq = SQUARES[square]\n\n    /* don't let the user place more than one king */\n    if (\n      piece.type == KING &&\n      !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n    ) {\n      return false\n    }\n\n    board[sq] = { type: piece.type, color: piece.color }\n    if (piece.type === KING) {\n      kings[piece.color] = sq\n    }\n\n    update_setup(generate_fen())\n\n    return true\n  }\n\n  function remove(square) {\n    var piece = get(square)\n    board[SQUARES[square]] = null\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY\n    }\n\n    update_setup(generate_fen())\n\n    return piece\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    }\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION\n      move.promotion = promotion\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type\n    } else if (flags & BITS.EP_CAPTURE) {\n      move.captured = PAWN\n    }\n    return move\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (\n        typeof board[from] !== \"undefined\" &&\n        board[from].type === PAWN &&\n        (rank(to) === RANK_8 || rank(to) === RANK_1)\n      ) {\n        var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n        for (var i = 0, len = pieces.length; i < len; i++) {\n          moves.push(build_move(board, from, to, flags, pieces[i]))\n        }\n      } else {\n        moves.push(build_move(board, from, to, flags))\n      }\n    }\n\n    var moves = []\n    var us = turn\n    var them = swap_color(us)\n    var second_rank = { b: RANK_7, w: RANK_2 }\n\n    var first_sq = SQUARES.a8\n    var last_sq = SQUARES.h1\n    var single_square = false\n\n    /* do we want legal moves? */\n    var legal =\n      typeof options !== 'undefined' && 'legal' in options\n        ? options.legal\n        : true\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square]\n        single_square = true\n      } else {\n        /* invalid square */\n        return []\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      var piece = board[i]\n      if (piece == null || piece.color !== us) {\n        continue\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0]\n        if (board[square] == null) {\n          add_move(board, moves, i, square, BITS.NORMAL)\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1]\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN)\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j]\n          if (square & 0x88) continue\n\n          if (board[square] != null && board[square].color === them) {\n            add_move(board, moves, i, square, BITS.CAPTURE)\n          } else if (square === ep_square) {\n            add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j]\n          var square = i\n\n          while (true) {\n            square += offset\n            if (square & 0x88) break\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL)\n            } else {\n              if (board[square].color === us) break\n              add_move(board, moves, i, square, BITS.CAPTURE)\n              break\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if (!single_square || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us]\n        var castling_to = castling_from + 2\n\n        if (\n          board[castling_from + 1] == null &&\n          board[castling_to] == null &&\n          !attacked(them, kings[us]) &&\n          !attacked(them, castling_from + 1) &&\n          !attacked(them, castling_to)\n        ) {\n          add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us]\n        var castling_to = castling_from - 2\n        \n        if (\n          castling_from != -1 &&\n          board[castling_from - 1] == null &&\n          board[castling_from - 2] == null &&\n          board[castling_from - 3] == null &&\n          !attacked(them, kings[us]) &&\n          !attacked(them, castling_from - 1) &&\n          !attacked(them, castling_to)\n        ) {\n          add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = []\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i])\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i])\n      }\n      undo_move()\n    }\n\n    return legal_moves\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n    var output = ''\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O'\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O'\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy)\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0]\n        }\n        output += 'x'\n      }\n\n      output += algebraic(move.to)\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase()\n      }\n    }\n\n    make_move(move)\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#'\n      } else {\n        output += '+'\n      }\n    }\n    undo_move()\n\n    return output\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue\n\n      var piece = board[i]\n      var difference = i - square\n      var index = difference + 119\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true\n          } else {\n            if (piece.color === BLACK) return true\n          }\n          continue\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true\n\n        var offset = RAYS[index]\n        var j = i + offset\n\n        var blocked = false\n        while (j !== square) {\n          if (board[j] != null) {\n            blocked = true\n            break\n          }\n          j += offset\n        }\n\n        if (!blocked) return true\n      }\n    }\n\n    return false\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color])\n  }\n\n  function in_check() {\n    return king_attacked(turn)\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0\n  }\n\n  function insufficient_material() {\n    var pieces = {}\n    var bishops = []\n    var num_pieces = 0\n    var sq_color = 0\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      var piece = board[i]\n      if (piece) {\n        pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color)\n        }\n        num_pieces++\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) {\n      return true\n    } else if (\n      /* k vs. kn .... or .... k vs. kb */\n      num_pieces === 3 &&\n      (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n    ) {\n      return true\n    } else if (num_pieces === pieces[BISHOP] + 2) {\n      /* kb vs. kb where any number of bishops are all on the same color */\n      var sum = 0\n      var len = bishops.length\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i]\n      }\n      if (sum === 0 || sum === len) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = []\n    var positions = {}\n    var repetition = false\n\n    while (true) {\n      var move = undo_move()\n      if (!move) break\n      moves.push(move)\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen()\n        .split(' ')\n        .slice(0, 4)\n        .join(' ')\n\n      /* has the position occurred three or move times */\n      positions[fen] = fen in positions ? positions[fen] + 1 : 1\n      if (positions[fen] >= 3) {\n        repetition = true\n      }\n\n      if (!moves.length) {\n        break\n      }\n      make_move(moves.pop())\n    }\n\n    return repetition\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: { b: kings.b, w: kings.w },\n      turn: turn,\n      castling: { b: castling.b, w: castling.w },\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    })\n  }\n\n  function make_move(move) {\n    var us = turn\n    var them = swap_color(us)\n    push(move)\n\n    board[move.to] = board[move.from]\n    board[move.from] = null\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null\n      } else {\n        board[move.to + 16] = null\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = { type: move.promotion, color: us }\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1\n        var castling_from = move.to + 1\n        board[castling_to] = board[castling_from]\n        board[castling_from] = null\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1\n        var castling_from = move.to - 2\n        board[castling_to] = board[castling_from]\n        board[castling_from] = null\n      }\n\n      /* turn off castling */\n      castling[us] = ''\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (\n          move.from === ROOKS[us][i].square &&\n          castling[us] & ROOKS[us][i].flag\n        ) {\n          castling[us] ^= ROOKS[us][i].flag\n          break\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (\n          move.to === ROOKS[them][i].square &&\n          castling[them] & ROOKS[them][i].flag\n        ) {\n          castling[them] ^= ROOKS[them][i].flag\n          break\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16\n      } else {\n        ep_square = move.to + 16\n      }\n    } else {\n      ep_square = EMPTY\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0\n    } else {\n      half_moves++\n    }\n\n    if (turn === BLACK) {\n      move_number++\n    }\n    turn = swap_color(turn)\n  }\n\n  function undo_move() {\n    var old = history.pop()\n    if (old == null) {\n      return null\n    }\n\n    var move = old.move\n    kings = old.kings\n    turn = old.turn\n    castling = old.castling\n    ep_square = old.ep_square\n    half_moves = old.half_moves\n    move_number = old.move_number\n\n    var us = turn\n    var them = swap_color(turn)\n\n    board[move.from] = board[move.to]\n    board[move.from].type = move.piece // to undo any promotions\n    board[move.to] = null\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = { type: move.captured, color: them }\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index\n      if (us === BLACK) {\n        index = move.to - 16\n      } else {\n        index = move.to + 16\n      }\n      board[index] = { type: PAWN, color: them }\n    }\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1\n        castling_from = move.to - 1\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2\n        castling_from = move.to + 1\n      }\n\n      board[castling_to] = board[castling_from]\n      board[castling_from] = null\n    }\n\n    return move\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({ legal: !sloppy })\n\n    var from = move.from\n    var to = move.to\n    var piece = move.piece\n\n    var ambiguities = 0\n    var same_rank = 0\n    var same_file = 0\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from\n      var ambig_to = moves[i].to\n      var ambig_piece = moves[i].piece\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from)\n      } else if (same_file > 0) {\n        /* if the moving piece rests on the same file, use the rank symbol as the\n         * disambiguator\n         */\n        return algebraic(from).charAt(1)\n      } else {\n        /* else use the file symbol */\n        return algebraic(from).charAt(0)\n      }\n    }\n\n    return ''\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n'\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |'\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . '\n      } else {\n        var piece = board[i].type\n        var color = board[i].color\n        var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n        s += ' ' + symbol + ' '\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n'\n        i += 8\n      }\n    }\n    s += '   +------------------------+\\n'\n    s += '     a  b  c  d  e  f  g  h\\n'\n\n    return s\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move)\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(\n        /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n      )\n      if (matches) {\n        var piece = matches[1]\n        var from = matches[2]\n        var to = matches[3]\n        var promotion = matches[4]\n      }\n    }\n\n    var moves = generate_moves()\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if (\n        clean_move === stripped_san(move_to_san(moves[i])) ||\n        (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))\n      ) {\n        return moves[i]\n      } else {\n        if (\n          matches &&\n          (!piece || piece.toLowerCase() == moves[i].piece) &&\n          SQUARES[from] == moves[i].from &&\n          SQUARES[to] == moves[i].to &&\n          (!promotion || promotion.toLowerCase() == moves[i].promotion)\n        ) {\n          return moves[i]\n        }\n      }\n    }\n\n    return null\n  }\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4\n  }\n\n  function file(i) {\n    return i & 15\n  }\n\n  function algebraic(i) {\n    var f = file(i),\n      r = rank(i)\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move)\n    move.san = move_to_san(move, false)\n    move.to = algebraic(move.to)\n    move.from = algebraic(move.from)\n\n    var flags = ''\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag]\n      }\n    }\n    move.flags = flags\n\n    return move\n  }\n\n  function clone(obj) {\n    var dupe = obj instanceof Array ? [] : {}\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property])\n      } else {\n        dupe[property] = obj[property]\n      }\n    }\n\n    return dupe\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({ legal: false })\n    var nodes = 0\n    var color = turn\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i])\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1)\n          nodes += child_nodes\n        } else {\n          nodes++\n        }\n      }\n      undo_move()\n    }\n\n    return nodes\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n      /* from the ECMA-262 spec (section 12.6.4):\n       * \"The mechanics of enumerating the properties ... is\n       * implementation dependent\"\n       * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n       * ordered correctly\n       */\n      var keys = []\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n        if (i & 0x88) {\n          i += 7\n          continue\n        }\n        keys.push(algebraic(i))\n      }\n      return keys\n    })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen)\n    },\n\n    reset: function() {\n      return reset()\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options)\n      var moves = []\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (\n          typeof options !== 'undefined' &&\n          'verbose' in options &&\n          options.verbose\n        ) {\n          moves.push(make_pretty(ugly_moves[i]))\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false))\n        }\n      }\n\n      return moves\n    },\n\n    in_check: function() {\n      return in_check()\n    },\n\n    in_checkmate: function() {\n      return in_checkmate()\n    },\n\n    in_stalemate: function() {\n      return in_stalemate()\n    },\n\n    in_draw: function() {\n      return (\n        half_moves >= 100 ||\n        in_stalemate() ||\n        insufficient_material() ||\n        in_threefold_repetition()\n      )\n    },\n\n    insufficient_material: function() {\n      return insufficient_material()\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition()\n    },\n\n    game_over: function() {\n      return (\n        half_moves >= 100 ||\n        in_checkmate() ||\n        in_stalemate() ||\n        insufficient_material() ||\n        in_threefold_repetition()\n      )\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen)\n    },\n\n    fen: function() {\n      return generate_fen()\n    },\n\n    board: function() {\n      var output = [],\n        row = []\n\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n        if (board[i] == null) {\n          row.push(null)\n        } else {\n          row.push({ type: board[i].type, color: board[i].color })\n        }\n        if ((i + 1) & 0x88) {\n          output.push(row)\n          row = []\n          i += 8\n        }\n      }\n\n      return output\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline =\n        typeof options === 'object' && typeof options.newline_char === 'string'\n          ? options.newline_char\n          : '\\n'\n      var max_width =\n        typeof options === 'object' && typeof options.max_width === 'number'\n          ? options.max_width\n          : 0\n      var result = []\n      var header_exists = false\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n        header_exists = true\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline)\n      }\n\n      var append_comment = function(move_string) {\n        var comment = comments[generate_fen()]\n        if (typeof comment !== 'undefined') {\n          var delimiter = move_string.length > 0 ? ' ' : '';\n          move_string = `${move_string}${delimiter}{${comment}}`\n        }\n        return move_string\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = []\n      while (history.length > 0) {\n        reversed_history.push(undo_move())\n      }\n\n      var moves = []\n      var move_string = ''\n\n      /* special case of a commented starting position with no moves */\n      if (reversed_history.length === 0) {\n        moves.push(append_comment(''))\n      }\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        move_string = append_comment(move_string)\n        var move = reversed_history.pop()\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...'\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string)\n          }\n          move_string = move_number + '.'\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false)\n        make_move(move)\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(append_comment(move_string))\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result)\n      }\n\n      /* history should be back to what it was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ')\n      }\n\n      var strip = function() {\n        if (result.length > 0 && result[result.length - 1] === ' ') {\n          result.pop();\n          return true;\n        }\n        return false;\n      };\n\n      /* NB: this does not preserve comment whitespace. */\n      var wrap_comment = function(width, move) {\n        for (var token of move.split(' ')) {\n          if (!token) {\n            continue;\n          }\n          if (width + token.length > max_width) {\n            while (strip()) {\n              width--;\n            }\n            result.push(newline);\n            width = 0;\n          }\n          result.push(token);\n          width += token.length;\n          result.push(' ');\n          width++;\n        }\n        if (strip()) {\n          width--;\n        }\n        return width;\n      };\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0\n      for (var i = 0; i < moves.length; i++) {\n        if (current_width + moves[i].length > max_width) {\n          if (moves[i].includes('{')) {\n            current_width = wrap_comment(current_width, moves[i]);\n            continue;\n          }\n        }\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop()\n          }\n\n          result.push(newline)\n          current_width = 0\n        } else if (i !== 0) {\n          result.push(' ')\n          current_width++\n        }\n        result.push(moves[i])\n        current_width += moves[i].length\n      }\n\n      return result.join('')\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy =\n        typeof options !== 'undefined' && 'sloppy' in options\n          ? options.sloppy\n          : false\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\')\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true\n        }\n        return false\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char =\n          typeof options === 'object' &&\n          typeof options.newline_char === 'string'\n            ? options.newline_char\n            : '\\r?\\n'\n        var header_obj = {}\n        var headers = header.split(new RegExp(mask(newline_char)))\n        var key = ''\n        var value = ''\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1')\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\ *\\]$/, '$1')\n          if (trim(key).length > 0) {\n            header_obj[key] = value\n          }\n        }\n\n        return header_obj\n      }\n\n      var newline_char =\n        typeof options === 'object' && typeof options.newline_char === 'string'\n          ? options.newline_char\n          : '\\r?\\n'\n\n      // RegExp to split header. Takes advantage of the fact that header and movetext\n      // will always have a blank line between them (ie, two newline_char's).\n      // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\n      var header_regex = new RegExp(\n        '^(\\\\[((?:' +\n          mask(newline_char) +\n          ')|.)*\\\\])' +\n          '(?:' +\n          mask(newline_char) +\n          '){2}'\n      )\n\n      // If no header given, begin with moves.\n      var header_string = header_regex.test(pgn)\n        ? header_regex.exec(pgn)[1]\n        : ''\n\n      // Put the board in the starting position\n      reset()\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options)\n      for (var key in headers) {\n        set_header([key, headers[key]])\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n       * [FEN position] */\n      if (headers['SetUp'] === '1') {\n        if (!('FEN' in headers && load(headers['FEN'], true))) {\n          // second argument to load: don't clear the headers\n          return false\n        }\n      }\n\n      /* NB: the regexes below that delete move numbers, recursive\n       * annotations, and numeric annotation glyphs may also match\n       * text in comments. To prevent this, we transform comments\n       * by hex-encoding them in place and decoding them again after\n       * the other tokens have been deleted.\n       *\n       * While the spec states that PGN files should be ASCII encoded,\n       * we use {en,de}codeURIComponent here to support arbitrary UTF8\n       * as a convenience for modern users */\n\n      var to_hex = function(string) {\n        return Array\n          .from(string)\n          .map(function(c) {\n            /* encodeURI doesn't transform most ASCII characters,\n             * so we handle these ourselves */\n            return c.charCodeAt(0) < 128\n              ? c.charCodeAt(0).toString(16)\n              : encodeURIComponent(c).replace(/\\%/g, '').toLowerCase()\n          })\n          .join('')\n      }\n\n      var from_hex = function(string) {\n        return string.length == 0\n          ? ''\n          : decodeURIComponent('%' + string.match(/.{1,2}/g).join('%'))\n      }\n\n      var encode_comment = function(string) {\n        string = string.replace(new RegExp(mask(newline_char), 'g'), ' ')\n        return `{${to_hex(string.slice(1, string.length - 1))}}`\n      }\n\n      var decode_comment = function(string) {\n        if (string.startsWith('{') && string.endsWith('}')) {\n          return from_hex(string.slice(1, string.length - 1))\n        }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn\n        .replace(header_string, '')\n        .replace(\n          /* encode comments so they don't get deleted below */\n          new RegExp(`(\\{[^}]*\\})+?|;([^${mask(newline_char)}]*)`, 'g'),\n          function(match, bracket, semicolon) {\n            return bracket !== undefined\n              ? encode_comment(bracket)\n              : ' ' + encode_comment(`{${semicolon.slice(1)}}`)\n          }\n        )\n        .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '')\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '')\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '')\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/))\n\n      /* delete empty entries */\n      moves = moves\n        .join(',')\n        .replace(/,,+/g, ',')\n        .split(',')\n      var move = ''\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        var comment = decode_comment(moves[half_move])\n        if (comment !== undefined) {\n          comments[generate_fen()] = comment\n          continue\n        }\n        move = move_from_san(moves[half_move], sloppy)\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false\n        } else {\n          make_move(move)\n        }\n      }\n\n      comment = decode_comment(moves[moves.length - 1])\n      if (comment !== undefined) {\n        comments[generate_fen()] = comment\n        moves.pop()\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1]\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move])\n        }\n      } else {\n        move = move_from_san(move, sloppy)\n        if (move == null) {\n          return false\n        } else {\n          make_move(move)\n        }\n      }\n      return true\n    },\n\n    header: function() {\n      return set_header(arguments)\n    },\n\n    ascii: function() {\n      return ascii()\n    },\n\n    turn: function() {\n      return turn\n    },\n\n    setTurn: function(t) {\n        turn = t;\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy =\n        typeof options !== 'undefined' && 'sloppy' in options\n          ? options.sloppy\n          : false\n\n      var move_obj = null\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy)\n      } else if (typeof move === 'object') {\n        var moves = generate_moves()\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (\n            move.from === algebraic(moves[i].from) &&\n            move.to === algebraic(moves[i].to) &&\n            (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)\n          ) {\n            move_obj = moves[i]\n            break\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj)\n\n      make_move(move_obj)\n\n      return pretty_move\n    },\n\n    undo: function() {\n      var move = undo_move()\n      return move ? make_pretty(move) : null\n    },\n\n    clear: function() {\n      return clear()\n    },\n\n    put: function(piece, square) {\n      return put(piece, square)\n    },\n\n    get: function(square) {\n      return get(square)\n    },\n\n    remove: function(square) {\n      return remove(square)\n    },\n\n    perft: function(depth) {\n      return perft(depth)\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square]\n        return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n      }\n\n      return null\n    },\n\n    history: function(options) {\n      var reversed_history = []\n      var move_history = []\n      var verbose =\n        typeof options !== 'undefined' &&\n        'verbose' in options &&\n        options.verbose\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move())\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop()\n        if (verbose) {\n          move_history.push(make_pretty(move))\n        } else {\n          move_history.push(move_to_san(move))\n        }\n        make_move(move)\n      }\n\n      return move_history\n    },\n\n    get_comment: function() {\n      return comments[generate_fen()];\n    },\n\n    set_comment: function(comment) {\n      comments[generate_fen()] = comment.replace('{', '[').replace('}', ']');\n    },\n\n    delete_comment: function() {\n      var comment = comments[generate_fen()];\n      delete comments[generate_fen()];\n      return comment;\n    },\n\n    get_comments: function() {\n      prune_comments();\n      return Object.keys(comments).map(function(fen) {\n        return {fen: fen, comment: comments[fen]};\n      });\n    },\n\n    delete_comments: function() {\n      prune_comments();\n      return Object.keys(comments)\n        .map(function(fen) {\n          var comment = comments[fen];\n          delete comments[fen];\n          return {fen: fen, comment: comment};\n        });\n    }\n  }\n}\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined')\n  define(function() {\n    return Chess\n  })","import Chessboard from \"chessboardjs\";\nimport { Chess } from \"./chess\";\n\nconsole.log(`\n\n|\\___   ___\\\\  \\|\\  \\|\\   __  \\|\\   __  \\|\\   ____\\|\\  \\|\\  \\|\\   __  \\|\\   _ \\  _   \\|\\   __  \\  \n\\|___ \\  \\_\\ \\  \\\\\\  \\ \\  \\|\\  \\ \\  \\|\\  \\ \\  \\___|\\ \\  \\\\\\  \\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \n     \\ \\  \\ \\ \\  \\\\\\  \\ \\   _  _\\ \\  \\\\\\  \\ \\  \\    \\ \\   __  \\ \\   __  \\ \\  \\\\|__| \\  \\ \\   ____\\\n      \\ \\  \\ \\ \\  \\\\\\  \\ \\  \\\\  \\\\ \\  \\\\\\  \\ \\  \\____\\ \\  \\ \\  \\ \\  \\ \\  \\ \\  \\    \\ \\  \\ \\  \\___|\n       \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\_______\\ \\_______\\ \\__\\ \\__\\ \\__\\ \\__\\ \\__\\    \\ \\__\\ \\__\\   \n        \\|__|  \\|_______|\\|__|\\|__|\\|_______|\\|_______|\\|__|\\|__|\\|__|\\|__|\\|__|     \\|__|\\|__|   \n\n`);\n\nconst board = Chessboard(\"board1\", {\n  draggable: true,\n  position: \"start\",\n  onDragStart: onDragStart,\n  onDrop: onDrop,\n  onSnapEnd: onSnapEnd,\n  pieceTheme: '/{piece}.png',\n});\nboard.flip();\nboard.start();\nconst game = new Chess();\nconst worker = new Worker('./worker.js');\nlet isWhite = true;\nconst thinking = document.querySelector('.thinking');\nconst scorecard = document.querySelector('.scorecard');\nconst statusDisplay = document.querySelector('.status');\nlet moveNumber = 1;\nlet newdiv = document.createElement('div');\nnewdiv.id = \"move-1\";\nscorecard.append(newdiv);\nlet moveString = moveNumber + \". \";\ngame.header('White', 'Turochamp', 'Black', 'Player');\ndocument.getElementById('download-pgn').addEventListener('click', downloadPGN);\n\nfunction downloadPGN() {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(game.pgn()));\n  element.setAttribute('download', 'turochamp-game-'+Date.now()+'.pgn');\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction onDragStart(source, piece, position, orientation) {\n  if(isWhite) {return false;}\n  if (game.game_over()) return false;\n\n  if (\n    (game.turn() === \"w\") ||\n    (game.turn() === \"b\" && piece.search(/^w/) !== -1)\n  ) {\n    return false;\n  }\n}\nfunction onDrop(source, target) {\n  // see if the move is legal\n  var move = game.move({\n    from: source,\n    to: target,\n    promotion: \"q\", \n  });\n\n  // illegal move\n  if (move === null) return \"snapback\";\n\n  moveString += \" \" + move.san;\n  document.getElementById('move-'+moveNumber).innerHTML = moveString;\n  moveNumber++;\n  moveString = moveNumber + \". \";\n  newdiv = document.createElement('div');\n  newdiv.id = \"move-\"+moveNumber;\n  scorecard.append(newdiv);\n  updateStatus(move);\n  \n}\nfunction updateStatus(move) {\n  var status = \"\";\n\n  var moveColor = \"White\";\n  if (game.turn() === \"b\") {\n    moveColor = \"Black\";\n  }\n\n  if (game.in_checkmate()) {\n    status = moveColor + \" is checkmated.\";\n  }\n\n  else if (game.in_draw()) {\n    status = \"Game over, drawn position\";\n  }\n\n  else {\n    status = moveColor + \" to move\";\n    if (game.in_check()) {\n      status += \". Check\";\n    }\n  }\n  statusDisplay.innerHTML = status;  \n  if(!game.game_over()){ \n\n    worker.postMessage(game.fen());\n    isWhite = true;\n    thinking.innerHTML = \" is thinking ...\";\n\n    worker.onmessage = e =>{\n      const nextMove = JSON.parse(e.data);\n      if(nextMove != null){\n        game.move(nextMove);\n        board.position(game.fen());\n        moveString += \" \" + nextMove.san;\n        document.getElementById('move-'+moveNumber).innerHTML = moveString;\n        updateStatus(nextMove);\n      }\n      isWhite = false;\n      thinking.innerHTML = \"\";\n    }\n  }\n}\nfunction onSnapEnd () {\n    board.position(game.fen())\n}\n\nupdateStatus();"]}